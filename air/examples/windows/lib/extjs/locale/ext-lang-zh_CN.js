/*!
 * Ext JS Library 3.3.0
 * Copyright(c) 2006-2010 Ext JS, Inc.
 * licensing@extjs.com
 * http://www.extjs.com/license
 */
/*
 * Simplified Chinese translation
 * By DavidHu
 * 09 April 2007
 * 
 * update by andy_ghg
 * 2009-10-22 15:00:57
 */

Ext.UpdateManager.defaults.indicatorText = '<div class="loading-indicator">åŠ è½½ä¸­...</div>';

if(Ext.DataView){
   Ext.DataView.prototype.emptyText = "";
}

if(Ext.grid.GridPanel){
   Ext.grid.GridPanel.prototype.ddText = "é€‰æ‹©äº† {0} è¡Œ";
}

if(Ext.TabPanelItem){
   Ext.TabPanelItem.prototype.closeText = "å…³é—­æ­¤æ ‡ç­¾";
}

if(Ext.form.Field){
   Ext.form.Field.prototype.invalidText = "è¾“å…¥å€¼é?žæ³•";
}

if (Ext.LoadMask) {
    Ext.LoadMask.prototype.msg = "è¯»å?–ä¸­...";
}

Date.monthNames = [
   "ä¸€æœˆ",
   "äºŒæœˆ",
   "ä¸‰æœˆ",
   "å››æœˆ",
   "äº”æœˆ",
   "å…­æœˆ",
   "ä¸ƒæœˆ",
   "å…«æœˆ",
   "ä¹?æœˆ",
   "å??æœˆ",
   "å??ä¸€æœˆ",
   "å??äºŒæœˆ"
];

Date.dayNames = [
   "æ—¥",
   "ä¸€",
   "äºŒ",
   "ä¸‰",
   "å››",
   "äº”",
   "å…­"
];

Date.formatCodes.a = "(this.getHours() < 12 ? 'ä¸Šå?ˆ' : 'ä¸‹å?ˆ')";
Date.formatCodes.A = "(this.getHours() < 12 ? 'ä¸Šå?ˆ' : 'ä¸‹å?ˆ')";

if(Ext.MessageBox){
   Ext.MessageBox.buttonText = {
      ok     : "ç¡®å®š",
      cancel : "å?–æ¶ˆ",
      yes    : "æ˜¯",
      no     : "å?¦"
   };
}

if(Ext.util.Format){
   Ext.util.Format.date = function(v, format){
      if(!v) return "";
      if(!(v instanceof Date)) v = new Date(Date.parse(v));
      return v.dateFormat(format || "yå¹´mæœˆdæ—¥");
   };
}

if(Ext.DatePicker){
   Ext.apply(Ext.DatePicker.prototype, {
      todayText         : "ä»Šå¤©",
      minText           : "æ—¥æœŸå¿…é¡»å¤§äºŽæœ€å°?å…?è®¸æ—¥æœŸ",//update
      maxText           : "æ—¥æœŸå¿…é¡»å°?äºŽæœ€å¤§å…?è®¸æ—¥æœŸ",//update
      disabledDaysText  : "",
      disabledDatesText : "",
      monthNames        : Date.monthNames,
      dayNames          : Date.dayNames,
      nextText          : 'ä¸‹ä¸ªæœˆ (Ctrl+Right)',
      prevText          : 'ä¸Šä¸ªæœˆ (Ctrl+Left)',
      monthYearText     : 'é€‰æ‹©ä¸€ä¸ªæœˆ (Control+Up/Down æ?¥æ”¹å?˜å¹´ä»½)',//update
      todayTip          : "{0} (ç©ºæ ¼é”®é€‰æ‹©)",
      format            : "yå¹´mæœˆdæ—¥",
      okText            : "ç¡®å®š",
      cancelText        : "å?–æ¶ˆ"
   });
}

if(Ext.PagingToolbar){
   Ext.apply(Ext.PagingToolbar.prototype, {
      beforePageText : "ç¬¬",//update
      afterPageText  : "é¡µ,å…± {0} é¡µ",//update
      firstText      : "ç¬¬ä¸€é¡µ",
      prevText       : "ä¸Šä¸€é¡µ",//update
      nextText       : "ä¸‹ä¸€é¡µ",
      lastText       : "æœ€å?Žé¡µ",
      refreshText    : "åˆ·æ–°",
      displayMsg     : "æ˜¾ç¤º {0} - {1}æ?¡ï¼Œå…± {2} æ?¡",//update
      emptyMsg       : 'æ²¡æœ‰æ•°æ?®'
   });
}

if(Ext.form.TextField){
   Ext.apply(Ext.form.TextField.prototype, {
      minLengthText : "è¯¥è¾“å…¥é¡¹çš„æœ€å°?é•¿åº¦æ˜¯ {0} ä¸ªå­—ç¬¦",
      maxLengthText : "è¯¥è¾“å…¥é¡¹çš„æœ€å¤§é•¿åº¦æ˜¯ {0} ä¸ªå­—ç¬¦",
      blankText     : "è¯¥è¾“å…¥é¡¹ä¸ºå¿…è¾“é¡¹",
      regexText     : "",
      emptyText     : null
   });
}

if(Ext.form.NumberField){
   Ext.apply(Ext.form.NumberField.prototype, {
      minText : "è¯¥è¾“å…¥é¡¹çš„æœ€å°?å€¼æ˜¯ {0}",
      maxText : "è¯¥è¾“å…¥é¡¹çš„æœ€å¤§å€¼æ˜¯ {0}",
      nanText : "{0} ä¸?æ˜¯æœ‰æ•ˆæ•°å€¼"
   });
}

if(Ext.form.DateField){
   Ext.apply(Ext.form.DateField.prototype, {
      disabledDaysText  : "ç¦?ç”¨",
      disabledDatesText : "ç¦?ç”¨",
      minText           : "è¯¥è¾“å…¥é¡¹çš„æ—¥æœŸå¿…é¡»åœ¨ {0} ä¹‹å?Ž",
      maxText           : "è¯¥è¾“å…¥é¡¹çš„æ—¥æœŸå¿…é¡»åœ¨ {0} ä¹‹å‰?",
      invalidText       : "{0} æ˜¯æ— æ•ˆçš„æ—¥æœŸ - å¿…é¡»ç¬¦å?ˆæ ¼å¼?ï¼š {1}",
      format            : "yå¹´mæœˆdæ—¥"
   });
}

if(Ext.form.ComboBox){
   Ext.apply(Ext.form.ComboBox.prototype, {
      loadingText       : "åŠ è½½ä¸­...",
      valueNotFoundText : undefined
   });
}

if(Ext.form.VTypes){
   Ext.apply(Ext.form.VTypes, {
      emailText    : 'è¯¥è¾“å…¥é¡¹å¿…é¡»æ˜¯ç”µå­?é‚®ä»¶åœ°å?€ï¼Œæ ¼å¼?å¦‚ï¼š "user@example.com"',
      urlText      : 'è¯¥è¾“å…¥é¡¹å¿…é¡»æ˜¯URLåœ°å?€ï¼Œæ ¼å¼?å¦‚ï¼š "http:/'+'/www.example.com"',
      alphaText    : 'è¯¥è¾“å…¥é¡¹å?ªèƒ½åŒ…å?«å?Šè§’å­—æ¯?å’Œ_',//update
      alphanumText : 'è¯¥è¾“å…¥é¡¹å?ªèƒ½åŒ…å?«å?Šè§’å­—æ¯?,æ•°å­—å’Œ_'//update
   });
}
//add HTMLEditor's tips by andy_ghg
if(Ext.form.HtmlEditor){
  Ext.apply(Ext.form.HtmlEditor.prototype, {
    createLinkText : 'æ·»åŠ è¶…çº§é“¾æŽ¥:',
    buttonTips : {
      bold : {
        title: 'ç²—ä½“ (Ctrl+B)',
        text: 'å°†é€‰ä¸­çš„æ–‡å­—è®¾ç½®ä¸ºç²—ä½“',
        cls: 'x-html-editor-tip'
      },
      italic : {
        title: 'æ–œä½“ (Ctrl+I)',
        text: 'å°†é€‰ä¸­çš„æ–‡å­—è®¾ç½®ä¸ºæ–œä½“',
        cls: 'x-html-editor-tip'
      },
      underline : {
        title: 'ä¸‹åˆ’çº¿ (Ctrl+U)',
        text: 'ç»™æ‰€é€‰æ–‡å­—åŠ ä¸‹åˆ’çº¿',
        cls: 'x-html-editor-tip'
      },
      increasefontsize : {
        title: 'å¢žå¤§å­—ä½“',
        text: 'å¢žå¤§å­—å?·',
        cls: 'x-html-editor-tip'
      },
      decreasefontsize : {
        title: 'ç¼©å°?å­—ä½“',
        text: 'å‡?å°?å­—å?·',
        cls: 'x-html-editor-tip'
      },
      backcolor : {
        title: 'ä»¥ä¸?å?Œé¢œè‰²çª?å‡ºæ˜¾ç¤ºæ–‡æœ¬',
        text: 'ä½¿æ–‡å­—çœ‹ä¸ŠåŽ»åƒ?æ˜¯ç”¨è?§å…‰ç¬”å?šäº†æ ‡è®°ä¸€æ ·',
        cls: 'x-html-editor-tip'
      },
      forecolor : {
        title: 'å­—ä½“é¢œè‰²',
        text: 'æ›´æ”¹å­—ä½“é¢œè‰²',
        cls: 'x-html-editor-tip'
      },
      justifyleft : {
        title: 'å·¦å¯¹é½?',
        text: 'å°†æ–‡å­—å·¦å¯¹é½?',
        cls: 'x-html-editor-tip'
      },
      justifycenter : {
        title: 'å±…ä¸­',
        text: 'å°†æ–‡å­—å±…ä¸­å¯¹é½?',
        cls: 'x-html-editor-tip'
      },
      justifyright : {
        title: 'å?³å¯¹é½?',
        text: 'å°†æ–‡å­—å?³å¯¹é½?',
        cls: 'x-html-editor-tip'
      },
      insertunorderedlist : {
        title: 'é¡¹ç›®ç¬¦å?·',
        text: 'å¼€å§‹åˆ›å»ºé¡¹ç›®ç¬¦å?·åˆ—è¡¨',
        cls: 'x-html-editor-tip'
      },
      insertorderedlist : {
        title: 'ç¼–å?·',
        text: 'å¼€å§‹åˆ›å»ºç¼–å?·åˆ—è¡¨',
        cls: 'x-html-editor-tip'
      },
      createlink : {
        title: 'è½¬æˆ?è¶…çº§é“¾æŽ¥',
        text: 'å°†æ‰€é€‰æ–‡æœ¬è½¬æ?¢æˆ?è¶…çº§é“¾æŽ¥',
        cls: 'x-html-editor-tip'
      },
      sourceedit : {
        title: 'ä»£ç ?è§†å›¾',
        text: 'ä»¥ä»£ç ?çš„å½¢å¼?å±•çŽ°æ–‡æœ¬',
        cls: 'x-html-editor-tip'
      }
    }
  });
}


if(Ext.grid.GridView){
   Ext.apply(Ext.grid.GridView.prototype, {
      sortAscText  : "æ­£åº?",//update
      sortDescText : "å€’åº?",//update
      lockText     : "é”?å®šåˆ—",//update
      unlockText   : "è§£é™¤é”?å®š",//update
      columnsText  : "åˆ—"
   });
}

if(Ext.grid.PropertyColumnModel){
   Ext.apply(Ext.grid.PropertyColumnModel.prototype, {
      nameText   : "å??ç§°",
      valueText  : "å€¼",
      dateFormat : "yå¹´mæœˆdæ—¥"
   });
}

if(Ext.layout.BorderLayout && Ext.layout.BorderLayout.SplitRegion){
   Ext.apply(Ext.layout.BorderLayout.SplitRegion.prototype, {
      splitTip            : "æ‹–åŠ¨æ?¥æ”¹å?˜å°ºå¯¸.",
      collapsibleSplitTip : "æ‹–åŠ¨æ?¥æ”¹å?˜å°ºå¯¸. å?Œå‡»éš?è—?."
   });
}